- name: checkout to main branch
  command: "{{item}}"
  args: 
    chdir: "{{workspace}}/"
  loop: 
    - git checkout main
    - git pull

- name: add host user operation (ubuntu)
  ansible.builtin.lineinfile:
    path: "{{workspace}}/ansible/inventory/{{ENV}}/user-operation-hosts"
    regexp: "^{{server_name}}-{{ENV}} "  # Look for existing host entry
    line: "{{server_name}}-{{ENV}} ansible_ssh_host={{server_ip}} ansible_ssh_user=ansibleuser"
    state: present
    create: yes

- name: add host for hardening server (ubuntu)
  ansible.builtin.lineinfile:
    path: "{{workspace}}/ansible/inventory/{{ENV}}/{{OS}}/hardening-server-hosts"
    regexp: "^{{server_name}}-{{ENV}} "  # Look for existing host entry
    insertafter: '^\[ubuntu\]'
    line: "{{server_name}}-{{ENV}} ansible_ssh_host={{server_ip}} ansible_ssh_user=ansibleuser"
    state: present
    create: yes

- name: add host for patching server (ubuntu)
  ansible.builtin.lineinfile:
    path: "{{workspace}}/ansible/inventory/{{ENV}}/{{OS}}/patching-server-hosts"
    regexp: "^{{server_name}}-{{ENV}} "  # Look for existing host entry
    insertafter: '^\[ubuntu\]'
    line: "{{server_name}}-{{ENV}} ansible_ssh_host={{server_ip}} ansible_ssh_user=ansibleuser"
    state: present
    create: yes

- name: git status
  command: git status
  args:
    chdir: "{{workspace}}/"
  register: status

- name: add new host to gitlab
  command: git add {{item}}
  args: 
    chdir: "{{workspace}}/"
  loop: 
    - "{{workspace}}/ansible/inventory/{{ENV}}/user-operation-hosts"
    - "{{workspace}}/ansible/inventory/{{ENV}}/{{OS}}/hardening-server-hosts"
    - "{{workspace}}/ansible/inventory/{{ENV}}/{{OS}}/patching-server-hosts"
  when: '"modified" in status.stdout'

- name: commit and push
  command: "{{item}}"
  args: 
    chdir: "{{workspace}}/"
  loop: 
    - git commit -m "add or update host server"
    - git push origin main
  when: '"modified" in status.stdout'
