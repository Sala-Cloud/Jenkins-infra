---
- name: Generate size_gb
  set_fact:
    vm_disks: "{{ vm_disks | default([]) + [{'size_gb': item.0, 'datastore': datastore}] }}"
  with_together:
    - "{{ hard_disk_capacity.split(', ') }}"

- name: Show the generated vm_disks variable
  debug:
    var: vm_disks

- name: Create a virtual machine
  vmware_guest:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    folder: "/{{ datacenter_name }}/vm"
    annotation: "{{ annotation }}"
    name: "{{ vm_name }}"
    validate_certs: false
    state: poweredon
    guest_id: "{{ guest_id }}"
    disk: "{{ vm_disks }}"
    hardware:
      memory_mb: "{{ RAM }}"
      num_cpus: "{{ CPU }}"
    cdrom:
      - controller_number: 0
        unit_number: 0
        type: iso
        iso_path: "{{ iso_path }}"
    networks:
      - name: "{{ network }}"

- name: checkout to main branch
  command: "{{item}}"
  args: 
    chdir: "{{workspace}}/"
  loop: 
    - git checkout main
    - git pull

- name: add vm server in to text
  ansible.builtin.lineinfile:
    path: "{{workspace}}/ansible/servers/vm/{{datastore}}/vm-servers.txt"
    insertafter: EOF
    line: "{{vm_name}}"
    state: present
    create: true

- name: git status
  command: git status
  args:
    chdir: "{{workspace}}/"
  register: status

- name: add new host to gitlab
  command: git add {{item}}
  args: 
    chdir: "{{workspace}}/"
  loop: 
    - "{{workspace}}/ansible/servers/vm/{{datastore}}/vm-servers.txt"
  when: '"modified" in status.stdout'

- name: commit and push
  command: "{{item}}"
  args: 
    chdir: "{{workspace}}/"
  loop: 
    - git commit -m "add new host server for vm "
    - git push origin main
  when: '"modified" in status.stdout'
