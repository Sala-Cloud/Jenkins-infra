pipeline {
    agent { label 'master' }
    environment {
        TELEGRAM_BOT_TOKEN = credentials('Telegram_Bot_Token') // Add in Jenkins credentials
        TELEGRAM_GROUP_ID  = credentials('Telegram_Group_ID')  // Add in Jenkins credentials
    }
    parameters {
        choice(name: 'OS',  choices: ['','ubuntu','redhat','solaris'], description: 'Pls choose OS')
        string(name: 'Server_Name', defaultValue: '', description: '')
        string(name: 'IP_Address', defaultValue: '', description: '')
        string(name: 'UserName', defaultValue: '', description: '')
        password(name: 'Password', defaultValue: '', description: 'Please input new password')
        choice(name: 'ENV',  choices: ['','pre-prod','uat','production'], description: 'Pls choose Environment')
        booleanParam(name: 'Git', defaultValue: false, description: 'Select to Install Git')
        booleanParam(name: 'Docker', defaultValue: false, description: 'Select to Install Docker')
        booleanParam(name: 'Apache', defaultValue: false, description: 'Select to Install Apache')
        booleanParam(name: 'Nginx', defaultValue: false, description: 'Select to Install Nginx')
        booleanParam(name: 'Jboss', defaultValue: false, description: 'Select to Install Jboss')
        booleanParam(name: 'Java', defaultValue: false, description: 'Select to Install Java')
    }
    stages {
        stage ('Custom Host') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'Password_Cred', variable: 'SECURE_PASSWORD')]) {
                        sh """
                            ansible-playbook ansible/custom-host.yml \
                                             -i ansible/inventory/${params.ENV}/hosts \
                                             -e ENV=${params.ENV} \
                                             -e password=${SECURE_PASSWORD} \
                                             -e server_ip=${params.IP_Address} \
                                             -e user=${params.UserName} \
                                             -e workspace=${WORKSPACE}
                        """
                    }
                }
            }
        }
        stage ('Configure Common Server') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'Password_Cred', variable: 'SECURE_PASSWORD')]) {
                        sh """
                            ansible-playbook ansible/common-server.yml \
                                -i ansible/inventory/${params.ENV}/custom-hosts \
                                -e "ansible_sudo_pass=${SECURE_PASSWORD}" \
                                -e docker=${params.Docker} \
                                -e git=${params.Git} \
                                -e nginx=${params.Nginx} \
                                -e apache=${params.Apache} \
                                -e jboss=${params.Jboss} \
                                -e java=${params.Java} | tee -a result-logs-${BUILD_NUMBER}.txt
                        """
                        sh """
                            echo "OS: ${params.OS}" > common-server-result-${BUILD_NUMBER}.txt
                            echo "Environments: ${params.ENV}" >> common-server-result-${BUILD_NUMBER}.txt
                            echo "Server_Name: ${params.Server_Name}" >> common-server-result-${BUILD_NUMBER}.txt
                            echo "IP_Address: ${params.IP_Address}" >> common-server-result-${BUILD_NUMBER}.txt
                            grep -A99 "PLAY RECAP" result-logs-${BUILD_NUMBER}.txt >> common-server-result-${BUILD_NUMBER}.txt
                        """
                    }
                    // Send logs to Telegram
                    sh """
                        curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendDocument" \
                        -F chat_id=${TELEGRAM_GROUP_ID} \
                        -F document=@${WORKSPACE}/result-logs-${BUILD_NUMBER}.txt \
                        -F caption="Result Logs Report attached for Build #${BUILD_NUMBER}"
                    """
                    sh """
                        curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendDocument" \
                        -F chat_id=${TELEGRAM_GROUP_ID} \
                        -F document=@${WORKSPACE}/common-server-result-${BUILD_NUMBER}.txt \
                        -F caption="Result Report attached for Build #${BUILD_NUMBER}"
                    """
                }
            }
        }
        stage ('Add Host') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'Password_Cred', variable: 'SECURE_PASSWORD')]) {
                        sh """
                            ansible-playbook ansible/add-host.yml \
                                             -i ansible/inventory/${params.ENV}/hosts \
                                             -e ENV=${params.ENV} \
                                             -e OS=${params.OS} \
                                             -e server_name=${params.Server_Name} \
                                             -e server_ip=${params.IP_Address} \
                                             -e user=${params.UserName} \
                                             -e password=${SECURE_PASSWORD} \
                                             -e workspace=${WORKSPACE}
                        """
                    }
                }
            }
        }
    }
    post {
        always {
            script {
                // Send notification about pipeline status to Telegram
                sh """
                    curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
                    -d chat_id=${TELEGRAM_GROUP_ID} \
                    -d text="Pipeline Finished: Configure Common Server\\nStatus: ${currentBuild.currentResult}\\nBuild Number: ${BUILD_NUMBER}"
                """
            }
        }
    }
}
